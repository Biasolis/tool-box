version: '3.8'

services:
  nginx:
    build: ./nginx
    container_name: tool-box-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - api-gateway
    networks:
      - tool-box-net

  postgres:
    image: postgres:14-alpine
    container_name: tool-box-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tool-box-net
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2023-09-07T22-05-05Z
    container_name: tool-box-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # API Port
      - "9001:9001" # Console Port
    volumes:
      - minio_data:/data
    networks:
      - tool-box-net
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: tool-box-frontend
    networks:
      - tool-box-net
    restart: unless-stopped

  api-gateway:
    build: ./services/api-gateway
    container_name: tool-box-api-gateway
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ROOT_USER}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - minio
    networks:
      - tool-box-net
    restart: unless-stopped

  password-generator:
    build:
      context: ./services/password-generator
      dockerfile: Dockerfile.generic
    container_name: tool-box-password-generator
    environment:
      NODE_ENV: development
      PORT: 3001
    ports:
      - "3001:3001"
    networks:
      - tool-box-net
    restart: unless-stopped

  pdf-tools:
    build:
      context: ./services/pdf-tools
      dockerfile: Dockerfile.generic
    container_name: tool-box-pdf-tools
    environment:
      NODE_ENV: development
      PORT: 3002
    ports:
      - "3002:3002"
    networks:
      - tool-box-net
    restart: unless-stopped

  media-converter:
    build:
      context: ./services/media-converter
      dockerfile: Dockerfile.generic
    container_name: tool-box-media-converter
    environment:
      NODE_ENV: development
      PORT: 3003
    ports:
      - "3003:3003"
    networks:
      - tool-box-net
    restart: unless-stopped

  password-cripto:
    build:
      context: ./services/password-cripto
      dockerfile: Dockerfile.generic
    container_name: tool-box-password-cripto
    environment:
      NODE_ENV: development
      PORT: 3004
    ports:
      - "3004:3004"
    networks:
      - tool-box-net
    restart: unless-stopped

  whiteboard:
    build:
      context: ./services/whiteboard
      dockerfile: Dockerfile.generic
    container_name: tool-box-whiteboard
    environment:
      NODE_ENV: development
      PORT: 3005
    ports:
      - "3005:3005"
    networks:
      - tool-box-net
    restart: unless-stopped

  password-vault:
    build:
      context: ./services/password-vault
      dockerfile: Dockerfile.generic
    container_name: tool-box-password-vault
    environment:
      NODE_ENV: development
      PORT: 3006
    ports:
      - "3006:3006"
    networks:
      - tool-box-net
    restart: unless-stopped

  task:
    build:
      context: ./services/task
      dockerfile: Dockerfile.generic
    container_name: tool-box-task
    environment:
      NODE_ENV: development
      PORT: 3007
    ports:
      - "3007:3007"
    networks:
      - tool-box-net
    restart: unless-stopped

  # --- Adicionar outros microsservi√ßos aqui ---
  # pdf-tools:
  #   build:
  #     context: ./services/pdf-tools
  #     dockerfile: Dockerfile.generic
  #   container_name: tool-box-pdf-tools
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3002
  #   ports:
  #     - "3002:3002"
  #   networks:
  #     - tool-box-net
  #   restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  tool-box-net:
    driver: bridge